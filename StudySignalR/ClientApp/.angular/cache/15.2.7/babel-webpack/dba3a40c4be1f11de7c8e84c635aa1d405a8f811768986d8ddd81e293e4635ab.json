{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/signalr.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction HomeComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function HomeComponent_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const chat_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectChat(chat_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chat_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", chat_r2.name, \" \");\n  }\n}\nfunction HomeComponent_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", message_r6.from, \" : \", message_r6.body, \"\");\n  }\n}\nfunction HomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HomeComponent_div_6_div_3_Template, 3, 2, \"div\", 15);\n    i0.ɵɵelementStart(4, \"div\", 16)(5, \"label\", 17);\n    i0.ɵɵtext(6, \"New Message:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_div_6_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.newMessage = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_6_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.sendMessage());\n    });\n    i0.ɵɵtext(9, \"Send\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedChat.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.SignalrService.messages);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newMessage);\n  }\n}\nexport class HomeComponent {\n  constructor(SignalrService, http, baseUrl) {\n    this.SignalrService = SignalrService;\n    this.http = http;\n    this.chats = [];\n    this.usernameSet = false;\n    this.newMessage = '';\n    this._baseUrl = baseUrl; //.replace(\"https\", 'wss');\n  }\n\n  ngOnInit() {\n    this.SignalrService.startConnection();\n    this.SignalrService.addChatListener();\n    this.SignalrService.addGetMessageListener();\n  }\n  setUsername() {\n    this.usernameSet = true;\n  }\n  createChat() {\n    this.http.post(this._baseUrl + 'api/chat', {\n      Name: this.newChatName\n    }).subscribe(res => {\n      this.newChatName = '';\n    });\n  }\n  selectChat(chat) {\n    this.selectedChat = chat;\n    this.SignalrService.cleanMessages();\n    this.SignalrService.subscribeOnChat(chat.id);\n  }\n  sendMessage() {\n    const message = {\n      chatId: this.selectedChat?.id,\n      from: this.username,\n      body: this.newMessage\n    };\n    this.http.post(this._baseUrl + 'api/message', message).subscribe(res => {\n      this.newMessage = '';\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.SignalrService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"list-group\"], [\"class\", \"list-group-item list-group-item-action\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [\"for\", \"newChatName\"], [\"type\", \"text\", \"id\", \"newChatName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"mt-2\", 3, \"click\"], [1, \"list-group-item\", \"list-group-item-action\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"mt-3\"], [\"for\", \"newMessage\"], [\"type\", \"text\", \"id\", \"newMessage\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, HomeComponent_button_4_Template, 2, 1, \"button\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵtemplate(6, HomeComponent_div_6_Template, 10, 3, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_12_listener() {\n        return ctx.setUsername();\n      });\n      i0.ɵɵtext(13, \"Set Username\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"New Chat Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.newChatName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_18_listener() {\n        return ctx.createChat();\n      });\n      i0.ɵɵtext(19, \"Create Chat\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.SignalrService.chats);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedChat);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.username)(\"disabled\", ctx.usernameSet);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newChatName);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","HomeComponent","constructor","SignalrService","http","baseUrl","_baseUrl","ngOnInit","startConnection","addChatListener","addGetMessageListener","setUsername","usernameSet","createChat","post","Name","newChatName","subscribe","res","selectChat","chat","selectedChat","cleanMessages","subscribeOnChat","id","sendMessage","message","chatId","from","username","body","newMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/kirillturin/Desktop/StudySignalR/StudySignalR/ClientApp/src/app/home/home.component.html","/Users/kirillturin/Desktop/StudySignalR/StudySignalR/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\n  <div class=\"row\">\n    <!-- Left column for list of chats -->\n    <div class=\"col-md-3\">\n      <div class=\"list-group\">\n        <button *ngFor=\"let chat of SignalrService.chats\" class=\"list-group-item list-group-item-action\" (click)=\"selectChat(chat)\">\n          {{ chat.name }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Middle section for messages -->\n    <div class=\"col-md-6\">\n      <div *ngIf=\"selectedChat\">\n        <h3>{{ selectedChat.name }}</h3>\n        <div *ngFor=\"let message of SignalrService.messages\">\n          <p>{{ message.from }} : {{ message.body }}</p>\n        </div>\n\n        <div class=\"form-group mt-3\">\n          <label for=\"newMessage\">New Message:</label>\n          <input type=\"text\" class=\"form-control\" id=\"newMessage\" [(ngModel)]=\"newMessage\" />\n        </div>\n        <button class=\"btn btn-primary\" (click)=\"sendMessage()\">Send</button>\n      </div>\n    </div>\n\n    <!-- Right column for username input and chat creation -->\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" [disabled]=\"usernameSet\" />\n        <button class=\"btn btn-primary mt-2\" (click)=\"setUsername()\">Set Username</button>\n      </div>\n\n      <!-- Chat creation -->\n      <div class=\"form-group\">\n        <label for=\"newChatName\">New Chat Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"newChatName\" [(ngModel)]=\"newChatName\" />\n        <button class=\"btn btn-success mt-2\" (click)=\"createChat()\">Create Chat</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { SignalrService } from '../services/signalr.service'\nimport {ChatModel} from \"../Interfaces/ChatModel\";\nimport {MessageModel} from \"../Interfaces/MessageModel\";\nimport {throwError} from \"rxjs\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  public chats: ChatModel [] = [];\n  public selectedChat: ChatModel |undefined;\n\n  public username : string | undefined;\n  newChatName: string | undefined;\n  usernameSet: boolean = false;\n\n  //public chatMessages : MessageModel[] = [];\n\n  private _baseUrl : string;\n  public newMessage: string = '';\n\n  constructor(public SignalrService : SignalrService,\n              private http: HttpClient,\n              @Inject('BASE_URL') baseUrl: string) {\n    this._baseUrl = baseUrl;//.replace(\"https\", 'wss');\n  }\n\n  ngOnInit() {\n    this.SignalrService.startConnection();\n    this.SignalrService.addChatListener();\n    this.SignalrService.addGetMessageListener();\n  }\n\n  setUsername() {\n    this.usernameSet = true;\n  }\n\n  createChat() {\n    this.http.post(this._baseUrl + 'api/chat', { Name: this.newChatName } )\n      .subscribe((res) => {\n        this.newChatName = '';\n      })\n  }\n\n  selectChat(chat: ChatModel) {\n    this.selectedChat = chat;\n    this.SignalrService.cleanMessages();\n    this.SignalrService.subscribeOnChat(chat.id);\n  }\n\n\n  sendMessage() {\n    const message = {\n      chatId: this.selectedChat?.id,\n      from: this.username,\n      body: this.newMessage\n    }\n    this.http.post(this._baseUrl + 'api/message',message)\n      .subscribe((res) => {\n        this.newMessage = '';\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}